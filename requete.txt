                Écrire des requêtes d'interrogation de la base de données

    
 - Afficher la liste des commandes ( la liste doit faire apparaitre la date, les informations du client, le plat et le prix )
    
    SELECT date_commande, nom_client, telephone_client, email_client, adresse_client, plat.libelle, total
    FROM commande , plat
    WHERE commande.id_plat = plat.id

 - Afficher la liste des plats en spécifiant la catégorie
    
    SELECT plat.libelle, description, prix, plat.image, nom_categorie
    FROM categorie , plat
    WHERE plat.id_categorie = categorie.id


 - Afficher les catégories et le nombre de plats actifs dans chaque catégorie

    SELECT categorie.nom_categorie, CONCAT(plat.id)
    FROM categorie
    LEFT JOIN plat ON categorie.id = plat.id_categorie AND plat.active = 'yes'
    GROUP BY categorie.nom_categorie

 - Liste des plats les plus vendus par ordre décroissant

    SELECT quantite, description, prix, plat.image, commande.id_plat, plat.libelle
    FROM commande, plat
    WHERE commande.id_plat = plat.id
    GROUP BY quantite DESC

 - Le plat le plus rémunérateur

    SELECT plat.libelle , description , prix , plat.image , commande.id_plat , quantite , total
    FROM plat, commande 
    WHERE commande.id_plat = plat.id
    ORDER BY total DESC
    LIMIT 1

 - Liste des clients et le chiffre d'affaire généré par client (par ordre décroissant)

    SELECT nom_client , total AS "Chiffre d'affaire généré" 
    FROM commande 
    ORDER BY total ASC

                Écrire des requêtes de modification de la base de données

 - Ecrivez une requête permettant de supprimer les plats non actif de la base de données

DELETE FROM plat
WHERE active = 'No'

 - Ecrivez une requête permettant de supprimer les commandes avec le statut livré

DELETE FROM commande
WHERE etat = 'Livrée'

 - Ecrivez un script SQL permettant d'ajouter une nouvelle catégorie et un plat dans cette nouvelle catégorie.

INSERT INTO categorie (active, image, nom_categorie)
VALUES ('Yes', '', 'New');

    -- Récupérer l'ID de la nouvelle catégorie
SET @nouvelle_categorie_id = LAST_INSERT_ID();

    -- Ajouter un plat dans la nouvelle catégorie
INSERT INTO plat (id_categorie, libelle , description, image , prix , active)
VALUES (@nouvelle_categorie_id, 'Nouveau Plat', 'Description du nouveau plat', '' , 10.99 , 'No');

 - Ecrivez une requête permettant d'augmenter de 10% le prix des plats de la catégorie 'Pizza'

UPDATE plat p
JOIN categorie c ON c.id = p.id_categorie
SET p.prix = p.prix * 1.1
WHERE c.nom_categorie = 'Pizza';

